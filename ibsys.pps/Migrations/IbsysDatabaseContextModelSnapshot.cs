// <auto-generated />
using System;
using IBSYS.PPS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IBSYS.PPS.Migrations
{
    [DbContext(typeof(IbsysDatabaseContext))]
    partial class IbsysDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("IBSYS.PPS.Models.BillOfMaterial", b =>
                {
                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.HasKey("ProductName");

                    b.ToTable("BillOfMaterials");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Disposition.BicyclePart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OrdersInQueueInherit")
                        .HasColumnType("text");

                    b.Property<string>("OrdersInQueueOwn")
                        .HasColumnType("text");

                    b.Property<string>("PlannedWarehouseFollowing")
                        .HasColumnType("text");

                    b.Property<string>("Quantity")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseStockPassed")
                        .HasColumnType("text");

                    b.Property<string>("Wip")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("DispositionEParts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BicyclePart");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Article", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<string>("Pct")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<string>("Startamount")
                        .HasColumnType("text");

                    b.Property<string>("Stockvalue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StockValuesFromLastPeriod");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Batch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .HasColumnType("text");

                    b.Property<string>("Cycletime")
                        .HasColumnType("text");

                    b.Property<int?>("OrderID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderID");

                    b.ToTable("Batch");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Forecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("P1")
                        .HasColumnType("text");

                    b.Property<string>("P2")
                        .HasColumnType("text");

                    b.Property<string>("P3")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Forecasts");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Order", b =>
                {
                    b.Property<int?>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<string>("Article")
                        .HasColumnType("text");

                    b.Property<string>("Averageunitcosts")
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .HasColumnType("text");

                    b.Property<string>("Entirecosts")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<string>("Materialcosts")
                        .HasColumnType("text");

                    b.Property<string>("Mode")
                        .HasColumnType("text");

                    b.Property<string>("Ordercosts")
                        .HasColumnType("text");

                    b.Property<string>("Orderperiod")
                        .HasColumnType("text");

                    b.Property<string>("Period")
                        .HasColumnType("text");

                    b.Property<string>("Piececosts")
                        .HasColumnType("text");

                    b.Property<string>("Quantity")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.HasKey("OrderID");

                    b.ToTable("FutureInwardStockMovement");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Input.SellDirectItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Article")
                        .HasColumnType("text");

                    b.Property<string>("Penalty")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<string>("Quantity")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SellDirectItems");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Input.Workingtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Overtime")
                        .HasColumnType("text");

                    b.Property<string>("Shift")
                        .HasColumnType("text");

                    b.Property<string>("Station")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Workingtimes");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.LaborAndMachineCosts", b =>
                {
                    b.Property<int>("Workplace")
                        .HasColumnType("integer");

                    b.Property<double>("IdleTimeMachineCosts")
                        .HasColumnType("double precision");

                    b.Property<double>("LaborCostsFirstShift")
                        .HasColumnType("double precision");

                    b.Property<double>("LaborCostsOvertime")
                        .HasColumnType("double precision");

                    b.Property<double>("LaborCostsSecondShift")
                        .HasColumnType("double precision");

                    b.Property<double>("LaborCostsThirdShift")
                        .HasColumnType("double precision");

                    b.Property<double>("ProductiveMachineCosts")
                        .HasColumnType("double precision");

                    b.HasKey("Workplace");

                    b.ToTable("LaborAndMachineCosts");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Material", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BillOfMaterialProductName")
                        .HasColumnType("text");

                    b.Property<string>("DirectAccess")
                        .HasColumnType("text");

                    b.Property<string>("MaterialName")
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentMaterialId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuantityNeeded")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("BillOfMaterialProductName");

                    b.HasIndex("ParentMaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Materialplanning.OrderForK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AdditionalParts")
                        .HasColumnType("integer");

                    b.Property<int>("OrderModus")
                        .HasColumnType("integer");

                    b.Property<string>("OrderQuantity")
                        .HasColumnType("text");

                    b.Property<string>("PartName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrdersForK");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.MissingPartInStock", b =>
                {
                    b.Property<int>("MissingPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.HasKey("MissingPartId");

                    b.ToTable("WaitinglistForStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.PlannedWarehouseStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Part")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceToBicycle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlannedWarehouseStocks");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.ProductionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Bicycle")
                        .HasColumnType("text");

                    b.Property<string>("Orders")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.SetupEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("NumberOfSetupEvents")
                        .HasColumnType("integer");

                    b.Property<string>("WorkplaceId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SetupEvents");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Stock", b =>
                {
                    b.Property<string>("ItemNumber")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ItemValue")
                        .HasColumnType("double precision");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("integer");

                    b.Property<string>("Usage")
                        .HasColumnType("text");

                    b.HasKey("ItemNumber");

                    b.ToTable("InitialStock");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Stock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForOrdersInWork", b =>
                {
                    b.Property<int>("WaitinglistForOrdersInWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("Batch")
                        .HasColumnType("integer");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<string>("Order")
                        .HasColumnType("text");

                    b.Property<string>("Period")
                        .HasColumnType("text");

                    b.Property<int>("TimeNeed")
                        .HasColumnType("integer");

                    b.HasKey("WaitinglistForOrdersInWorkId");

                    b.ToTable("OrdersInWork");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForStock", b =>
                {
                    b.Property<int>("WaitinglistForStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("MissingPartInStockMissingPartId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeNeed")
                        .HasColumnType("integer");

                    b.Property<string>("WorkplaceId")
                        .HasColumnType("text");

                    b.HasKey("WaitinglistForStockId");

                    b.HasIndex("MissingPartInStockMissingPartId");

                    b.ToTable("WaitinglistForStockWorkplaces");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("Batch")
                        .HasColumnType("integer");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<string>("Order")
                        .HasColumnType("text");

                    b.Property<string>("Period")
                        .HasColumnType("text");

                    b.Property<int>("TimeNeed")
                        .HasColumnType("integer");

                    b.Property<int?>("WaitinglistForWorkstationsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WaitinglistForWorkstationsId");

                    b.ToTable("WaitinglistForWorkplace");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkplaceStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("Batch")
                        .HasColumnType("integer");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<string>("Order")
                        .HasColumnType("text");

                    b.Property<string>("Period")
                        .HasColumnType("text");

                    b.Property<int>("TimeNeed")
                        .HasColumnType("integer");

                    b.Property<int?>("WaitinglistForStockId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WaitinglistForStockId");

                    b.ToTable("WaitinglistForWorkplaceStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkstations", b =>
                {
                    b.Property<int>("WaitinglistForWorkstationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("TimeNeed")
                        .HasColumnType("integer");

                    b.Property<string>("WorkplaceId")
                        .HasColumnType("text");

                    b.HasKey("WaitinglistForWorkstationsId");

                    b.ToTable("WaitinglistForWorkstations");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Disposition.OptimizedPart", b =>
                {
                    b.HasBaseType("IBSYS.PPS.Models.Disposition.BicyclePart");

                    b.Property<int>("Optimized")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("OptimizedPart");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.PurchasedItems", b =>
                {
                    b.HasBaseType("IBSYS.PPS.Models.Stock");

                    b.Property<double>("Deviation")
                        .HasColumnType("double precision");

                    b.Property<int>("DiscountQuantity")
                        .HasColumnType("integer");

                    b.Property<double>("OrderCosts")
                        .HasColumnType("double precision");

                    b.Property<double>("ProcureLeadTime")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue("PurchasedItems");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.SelfProductionItems", b =>
                {
                    b.HasBaseType("IBSYS.PPS.Models.Stock");

                    b.Property<string>("ProcessingTime")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("SelfProductionItems");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Batch", b =>
                {
                    b.HasOne("IBSYS.PPS.Models.Generated.Order", null)
                        .WithMany("Batch")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Material", b =>
                {
                    b.HasOne("IBSYS.PPS.Models.BillOfMaterial", null)
                        .WithMany("RequiredMaterials")
                        .HasForeignKey("BillOfMaterialProductName");

                    b.HasOne("IBSYS.PPS.Models.Material", "ParentMaterial")
                        .WithMany("MaterialNeeded")
                        .HasForeignKey("ParentMaterialId");

                    b.Navigation("ParentMaterial");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForStock", b =>
                {
                    b.HasOne("IBSYS.PPS.Models.MissingPartInStock", "MissingPartInStock")
                        .WithMany("WaitinglistForStock")
                        .HasForeignKey("MissingPartInStockMissingPartId");

                    b.Navigation("MissingPartInStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkplace", b =>
                {
                    b.HasOne("IBSYS.PPS.Models.WaitinglistForWorkstations", "WaitinglistForWorkstations")
                        .WithMany("WaitingListForWorkplace")
                        .HasForeignKey("WaitinglistForWorkstationsId");

                    b.Navigation("WaitinglistForWorkstations");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkplaceStock", b =>
                {
                    b.HasOne("IBSYS.PPS.Models.WaitinglistForStock", "WaitinglistForStock")
                        .WithMany("WaitinglistForWorkplaceStock")
                        .HasForeignKey("WaitinglistForStockId");

                    b.Navigation("WaitinglistForStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.BillOfMaterial", b =>
                {
                    b.Navigation("RequiredMaterials");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Generated.Order", b =>
                {
                    b.Navigation("Batch");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.Material", b =>
                {
                    b.Navigation("MaterialNeeded");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.MissingPartInStock", b =>
                {
                    b.Navigation("WaitinglistForStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForStock", b =>
                {
                    b.Navigation("WaitinglistForWorkplaceStock");
                });

            modelBuilder.Entity("IBSYS.PPS.Models.WaitinglistForWorkstations", b =>
                {
                    b.Navigation("WaitingListForWorkplace");
                });
#pragma warning restore 612, 618
        }
    }
}
